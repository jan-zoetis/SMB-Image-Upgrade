Base Image Generation:

The base image was created by sourcing script.bash and running selected functions manually as follows:

# source script.bash


TBD

#
#

Grub stuff:

For reasons (so far) unknown the installation of grub performed by script.bash (install_bootloader)
(accessing the partitions via loop devices) does not work when the script is run on 18.04.

Grub was successfully installed with grub-install directly on the partition on the generated CF card
using the command below (after the generated image was copied to the CF car using dd) and the
card mounted.

grub-install --compress=gz --target=i386-pc --debug
             --grub-mkdevicemap=/media/hellem03/88d67b2d-08eb-4406-bff5-2b932da0fa4e/grub/device.map
             --boot-directory=/media/hellem03/88d67b2d-08eb-4406-bff5-2b932da0fa4e  (/boot???)
             /dev/sdb



List of modifications made directly on the running image:

X11 stuff:

On the 12.04 the Galaxy touch screen is configured via /home/smb/xorg.conf and calibrated
using xinput-calibrator that generates a configuration section that is added to xorg.conf.

This does not work on 18.04. A "driver" package for the touch screen (eGTouch_v2.5.7413.L-x.zip)
must be installed. (http://www.eeti.com/drivers_Linux.html).

This installation contains:

    eGTouchD (the driver daemon)
    eGTouchU
    eCalib   (calibration tool)

The current application uses "system" to execute xinput_calibrator. The resulting parameters are redirected
to a text file and subsequently extracted and /home/smb/xorg.conf is re-generated accordingly.
This code will need to be modified to work on both platforms.
On 18.04 the application eCalib must be executed instead, this automatically saves the resulting calibration
parameters under /etc. The parameters will take effect after restarting eGTouchD.

The 12.04 image uses the minimal display manager "nodm" that is designed for running an application
in kiosk mode. This setup has been simplified to run without nodm, but just run the X server and the
kiosk application.

    dpkg --purge nodm

The following apt packages was needed:

    libasound2 (needed by eGTouch calibration tool)
    linux-modules-extra-5.0.0-23-generic (needed to get i915 graphics driver supporting xrandr screen rotation)
    dbus-x11


libpng12.so.0 copied from 12.04: to /usr/lib/i386-linux-gnu/libpng12.so.0


Using X configuration from /etc/X11/xorg.conf (default)

Added systemd scripts (in /lib/systemd/system):

    xserver.service               Starts X
    egtouch.service               Starts the eGTouchD daemon
    kiosk-application.service     starts the SMB application as user smb

Added SMB application (Application) start script

    /home/smb/start-application.sh


To make the root file system read-writable the method described in the document
describing the 12.04 image is for some reason not working on 18.04

# mount -o remount,rw /mnt/root-ro
# touch /mnt/root-ro/disable-root-ro
# reboot

The following must be added before reboot

# cp /mnt/root-ro/etc/fstab.rw /mnt/root-ro/etc/fstab

And vice versa when going back

# rm /disable-root-ro
# cp /etc/fstab.ro /etc/fstab

Added scripts and fstabs for this:

    /home/smb/go-ro.sh
    /home/smb/go-rw.sh

    /etc/fstab.ro
    /etc/fstab.rw

Dropbear (Light weight sshd):

Dropbear was for some reason enabled in initramfs-tools which resulted in error messages in boot.log.
Since it is not needed during start up the dropbear files were removed from

    /usr/share/initramfs-tools/init-premount
    /usr/share/initramfs-tools/init-bottom

NOTE:

Dropbear files still remain in

    /usr/share/initramfs-tools/conf-hooks.d/dropbear
    /usr/share/initramfs-tools/hooks/dropbear

They should be removed as well.

    and run update-initramfs -u

NOTE: Should be able to fix this by dropping some of the apt packages.

installing the apt-packet "dropbear" also installs dropbear-initramfs
we should probably install dropbear-bin and dropbear-run instead.



CUPS stuff:

Script.bash installs a number of packages related to CUPS.
However in the resulting image some files in the cups package is missing.
Perhaps due to the order of installation. It was necessary to re-install
the cups apt package. This is to be investigated.

Automount of USB devices

The package "usbmount" is installed to provide automatic mount of usb sticks.
This feature was not working "out of the box".

This turned out to caused by a configuration parameter in
      /lib/systemd/system/systemd-udevd.service

      MountFlags=slave

must be changed to :

      MountFlags=shared



